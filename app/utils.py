import os
from PIL import Image, ImageDraw, ImageFont
from typing import List, Dict
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

class ImageGenerator:
    def __init__(self):
        self.cache_dir = "cache"
        self.ensure_cache_dir()
        
    def ensure_cache_dir(self):
        """Create cache directory if it doesn't exist"""
        if not os.path.exists(self.cache_dir):
            os.makedirs(self.cache_dir)
    
    def generate_summary_image(self, total_countries: int, top_countries: List[Dict], last_refresh: datetime) -> str:
        """Generate summary image with country statistics"""
        try:
            # Image dimensions
            width, height = 800, 600
            image = Image.new('RGB', (width, height), color='white')
            draw = ImageDraw.Draw(image)
            
            # Try to use a nice font, fallback to default
            try:
                title_font = ImageFont.truetype("arial.ttf", 32)
                header_font = ImageFont.truetype("arial.ttf", 24)
                text_font = ImageFont.truetype("arial.ttf", 18)
            except:
                title_font = ImageFont.load_default()
                header_font = ImageFont.load_default()
                text_font = ImageFont.load_default()
            
            # Title
            draw.text((width//2, 50), "Country GDP Summary", fill='black', font=title_font, anchor="mm")
            
            # Total countries
            draw.text((50, 120), f"Total Countries: {total_countries}", fill='blue', font=header_font)
            
            # Last refresh time
            refresh_str = last_refresh.strftime("%Y-%m-%d %H:%M:%S UTC")
            draw.text((50, 160), f"Last Refresh: {refresh_str}", fill='green', font=header_font)
            
            # Top countries section
            draw.text((50, 220), "Top 5 Countries by GDP:", fill='black', font=header_font)
            
            y_position = 260
            for i, country in enumerate(top_countries[:5], 1):
                country_text = f"{i}. {country['name']}: ${country['estimated_gdp']:,.2f}"
                draw.text((70, y_position), country_text, fill='black', font=text_font)
                y_position += 35
            
            # Footer
            footer_text = "Generated by Country Currency & Exchange API"
            draw.text((width//2, height - 30), footer_text, fill='gray', font=text_font, anchor="mm")
            
            # Save image
            image_path = os.path.join(self.cache_dir, "summary.png")
            image.save(image_path)
            
            return image_path
            
        except Exception as e:
            logger.error(f"Error generating summary image: {e}")
            raise

# Create global image generator instance
image_generator = ImageGenerator()